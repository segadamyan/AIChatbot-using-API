using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System.Diagnostics;
using System.Globalization;
using System.Media;
using System.Net.Http.Headers;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace JSGuru
{
    public partial class Form1 : Form
    {
        PanelMessage question = new Question();
        PanelMessage answer = new Answer();
        private SoundPlayer send = new SoundPlayer();
        private SoundPlayer receive = new SoundPlayer();
        public Form1()
        {
            InitializeComponent();
        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {
            send.SoundLocation = AppDomain.CurrentDomain.BaseDirectory + "send.wav";
            receive.SoundLocation = AppDomain.CurrentDomain.BaseDirectory + "receive.wav";
        }

        private static string callPython(string question)
        {
            try
            {
                using (var httpClient = new HttpClient())
                {
                    using (var request = new HttpRequestMessage(new HttpMethod("GET"), "http://127.0.0.1:5000/" + question))
                    {
                        var response = httpClient.SendAsync(request).Result;
                        var json = response.Content.ReadAsStringAsync().Result;
                        dynamic dynObj = JsonConvert.DeserializeObject(json);
                        if (dynObj != null)
                        {
                            return dynObj;
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
            return null;
        }
        private static string callPythonScript(string question)
        {
            //string cmdArguments = "/c \"python " + "C:\\Users\\sergey.adamyan\\PycharmProjects\\AIChatbot\\chabnot.py" + " " + question + "\"";

            //ProcessStartInfo start = new ProcessStartInfo();
            //start.FileName = "cmd.exe";
            //start.Arguments = cmdArguments;
            //start.RedirectStandardOutput = true;// Any output, generated by application will be redirected back
            //start.RedirectStandardError = true; // Any error in standard output will be redirected back (for example exceptions)
            //string errors = "";
            //string result = "";
            //using (Process process = Process.Start(start))
            //{
            //    errors = process.StandardError.ReadToEnd();
            //    result = process.StandardOutput.ReadToEnd();
            //}
            var script = "chatbot.py";
            var process = new System.Diagnostics.Process();
            var startInfo = new System.Diagnostics.ProcessStartInfo
            {
                WorkingDirectory = @"C:\Users\sergey.adamyan\PycharmProjects\AIChatbot",
                WindowStyle = System.Diagnostics.ProcessWindowStyle.Normal,
                FileName = "cmd.exe",
                RedirectStandardInput = true,
                UseShellExecute = false,
                Arguments = $"python {script} "
            };
            process.StartInfo = startInfo;
            process.Start();

            //ProcessStartInfo psi = new ProcessStartInfo();
            //psi.FileName = @"C:\Users\sergey.adamyan\PycharmProjects\pythonProject\venv\Scripts\python.exe";

            //string script = @"C:\Users\sergey.adamyan\PycharmProjects\AIChatbot\chatbot.py";
            //psi.Arguments = $"\"{script}\" \"{question}\"";

            //psi.UseShellExecute = false;
            //psi.CreateNoWindow = true;
            //psi.RedirectStandardError = true;
            //psi.RedirectStandardOutput = true;

            //string errors = "";
            //string result = "";
            //using (Process process = Process.Start(psi))
            //{
            //    Thread.Sleep(2000);
            //    errors = process.StandardError.ReadToEnd();
            //    result = process.StandardOutput.ReadToEnd();
            //}
            return "";
        }
        private static string callOpenAI(int tokens, string input, string engine, double temperature, int topP, double frequencyPenalty, double presencePenalty)
        {
            string openAiKey = "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";

            var apiCall = "https://api.openai.com/v1/engines/" + engine + "/completions";
            try
            {
                using (var httpClient = new HttpClient())
                {
                    using (var request = new HttpRequestMessage(new HttpMethod("POST"), apiCall))
                    {
                        request.Headers.TryAddWithoutValidation("Authorization", "Bearer " + openAiKey);
                        request.Content = new StringContent("{\n  \"prompt\": \"" + input + "\",\n  \"temperature\": " +
                                                            temperature.ToString(CultureInfo.InvariantCulture) + ",\n  \"max_tokens\": " + tokens + ",\n  \"top_p\": " + topP +
                                                            ",\n  \"frequency_penalty\": " + frequencyPenalty + ",\n  \"presence_penalty\": " + presencePenalty + "\n}");
                        request.Content.Headers.ContentType = MediaTypeHeaderValue.Parse("application/json");
                        var response = httpClient.SendAsync(request).Result;
                        var json = response.Content.ReadAsStringAsync().Result;
                        dynamic dynObj = JsonConvert.DeserializeObject(json);
                        if (dynObj != null)
                        {
                            return dynObj.choices[0].text.ToString();
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
            return null;

        }


        private void Form1_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                string question = this.textBoxQuestion.Text;
                this.textBoxQuestion.Text = "";
                this.panel.Controls.Add(this.question.GetMessage(question));
                this.send.Play();
                //var answer = callOpenAI(250, question, "text-davinci-002", 0.7, 1, 1, 0).Trim('\n');
                string answer = Form1.callPython(question);
                Thread.Sleep(1000);
                this.panel.Controls.Add(this.answer.GetMessage(answer));
                this.receive.Play();
                
            }
        }

        private void button1_Click(object sender, EventArgs e)
        {
            this.Close();
        }
    }
}